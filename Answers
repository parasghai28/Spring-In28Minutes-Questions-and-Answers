1.What is Loose Coupling? 
public class StudentsService{
  StudentDao  st = new StudentDao(); //exa of tight coupling, where component is tightly coupled with its dependency
}
How to achieve loose coupling - Constructors and interfaces

@Component
public class StudentsService{
  
  @Autowired
  DaoService dao ;
  public StudentsService( DaoService daoService) {
      dao = daoService;
    }
}

public interface DaoService{
  return "/////";
}


2. What is a Dependency?
StudentsService have a dependency on DaoService. 


3.What is IOC (Inversion of Control)?
When we give responsbility of instantiating beans and injeting dependencies to spring, and not class itself


4.What is Dependency Injection?
Spring framework is used to instantiate beans and wire dependencies


5. Can you give few examples of Dependency Injection?
6. What is Auto Wiring?


7. What are the important roles of an IOC Container?
find beans , wire dependencies and manage lifecycle of bean

8.What are Bean Factory and Application Context?
Bean factory is the most basic version of IOC container. It will be able to do all basic things of IOC container. ApplicationContext is advanced IOC container
It provides AOP, webaApplicationContext for web apps. ApplicationContext is mostly used.

9.Can you compare Bean Factory with Application Context?

10.How do you create an application context with Spring?
Either XML or annotation @configuration


11. How does Spring know where to search for Components or Beans?
Spring does not know. we tell it the packages to search

12.What is a Component Scan?
Search for beans which Spring does. And input is the packages where it needs to find 


13.How do you define a component scan in XML and Java Configurations?
@ComponentScan(basePackages = "")



14.How is it done with Spring Boot? The packages which contains @springbootApplication annotation is scanned. Thats why we might not need to do a component scan
on Spring boot app if we have all the beans in subpackage of  @springbootApplication  package.

15.What does @Component signify?
@component - spring should manage the bean

16.What does @Autowired signify?



17.What’s the difference Between @Controller, @Component, @Repository, and @Service Annotations in Spring?
@Component - Generic compoennt
@Controller - controller in mvc pattern
@Repository - encapsulating storage, retrieval and search behviour typically from DB
@Service - Business Service facade
Separating them can help adding a feature and doing effective scanning


18.What is the default scope of a bean?
by default - singleton
singleton - one instance per Spring context
prototype - new bean whenever requested
request - one bean per http request
session - one bean per http session


19.Are Spring beans thread safe?
Not thread safe by default. 

20.What are the other scopes available?

21.How is Spring’s singleton bean different from Gang of Four Singleton Pattern?
Singleton DP says - one instance per classloader
Singleton scope says- one instance per application context. And you can have multiple application context

22.What are the different types of dependency injections?
setter and constructor injection. Also there is a thrd type which is c/d reflection. in that we dont use gettter or constrcutor, but it uses setter only 

23. What is setter injection?

24. What is constructor injection?
How do you choose between setter and constructor injections?
Spring mostly advices us to use constructor injection only as constructors injection makes an immutable bean as entire bean is made at one instance but in
case of setter injection we havee to first create bean with default constrcutor and then calling setter method to inject. Also constructor injection has
downfalls too. basically we canot have constrcutors with so many arguments which in turns helps us to know that our class is havily dependent upon
multiple things.
. For a thumbrule we can say, constrcutors for mandatory dependencies and setter injection for
optional dependencies

25.What are the different options available to create Application Contexts for Spring?


26. What is the difference between XML and Java Configurations for Spring?
Spring boot helps us to do better with annonation configuration

27.How do you choose between XML and Java Configurations for Spring?
28.How does Spring do Autowiring?
  byType -> class or interface
  byName -> Spring also autowires using name,
    for exa - 
    @autowired
    private SortAlgorithm quickSortAlgorithm; and SortAlgorithm is implemented by 2 classes QuickSortAlgorithm and BubbleSortAlgorithm then in that case
    Spring can guess that quickSortAlgorithm is analogous to QuickSortAlgorithm and will intialize QuickSortAlgorithm as camel case is understood by Spring
    
  constructor(similar to byType but through constructor) - 
  class TestClass {
  
  SortAlgorithm classAlgorithm;
  public testClass(SortAlgorithm algorithm;)
  classAlgorithm = algorithm;
  }
  
  In this case, Speing will try to find dependeny of SortAlgorithm type and use constrcutor for autowiring.
  
  
  
29.What are the different kinds of matching used by Spring for Autowiring?

30.How do you debug problems with Spring Framework?
NoSuchBeanException - when spring can not find bean - possibly because @component is not present, or maybe component scan has not been applied correctly


31.How do you solve NoUniqueBeanDefinitionException?
    private SortAlgorithm quickSortAlgorithm; and SortAlgorithm is implemented by 2 classes QuickSortAlgorithm and BubbleSortAlgorithm then in that case
    Spring can guess that quickSortAlgorithm is analogous to QuickSortAlgorithm and will intialize QuickSortAlgorithm as camel case is understood by Spring
    
  constructor(similar to byType but through constructor) - 
  class TestClass {
  
  SortAlgorithm classAlgorithm;
  public testClass(SortAlgorithm algorithm;)
  classAlgorithm = algorithm;
  }

here, there will be a an exception as classAlgorithm wont be able to decide which implementation to use, so to solve this
We can autowire by name in case of a problem like this.

  
  SortAlgorithm quickSortAlgorithm;
  public testClass(SortAlgorithm algorithm;)
  classAlgorithm = algorithm;
  }
  
  Now Spring container will undertsand that quickSortAlgorithm implementation is reqd.
  
  or use @primary which tells that which implemnetation is the primary choice
  or use @qualifier("bubblesoertAlgorithm") and same qualifier should be on the implemented class too which we are using here

32.How do you solve NoSuchBeanDefinitionException?

33.What is @Primary?
34.What is @Qualifier?
35.What is CDI (Contexts and Dependency Injection)?


36.Does Spring Support CDI?
37.Would you recommed to use CDI or Spring Annotations?
38.What are the major features in different versions of Spring?
  Spring 2.5 annotations came
  Spriung 4 - java 8 support, @RestController annonatione 
  Spring 5 - fucntional web framework, reactive programming, support for kotlin

39.What are new features in Spring Framework 4.0?
40.What are new features in Spring Framework 5.0?
41.What are important Spring Modules?
Core container - Beans, core , comtext, SPel(Spring expression langugae)
Data layer - Spring JDBC, ORM frameowrks(Hibernate), oBject xml mapping framework, JMS, transactions
Web layer - servlets, portlets, Spring MVC, Spring REST, web socket programming
Test layers - Dependency injection, helps us to write tests easily with mocks


42.What are important Spring Projects?
Spring boot- for developing microservices, develop apps quickly, quick config, actuator
Spring cloud - 
Spring data - Spring data helps to access data from databases easier way
Spring batch - Restart a 
Spring Security - Provide solutions to securing applications
Sprig hateOS - reuturn related links with data asked for


43.What is the simplest way of ensuring that we are using single version of all Spring related dependencies?
Use a BOM(Bill of material) dependencies in pom, <dependencymanagerment><Spring version>5.0.0 </></>


44.Name some of the design patterns used in Spring Framework?
Front controller - Dispactcher servlet
Protoype- beans
Dependency Injections
factory pattern - Bean factory and Aplication context
Template method - 

45.What do you think about Spring Framework?
Architectur- flexible(does't restrict choices in framework)
Design - losoly coupled
code - easy unit testing
features - DI, IOC, Autowiring, Component scan


46.Why is Spring Popular?
47Can you give a big picture of the Spring Framework?


48.Spring MVC

49.What is Model 1 architecture?
Browser ->JSP -> model

50.What is Model 2 architecture?
Browser ->Servlet ->view -> model

51.What is Model 2 Front Controller architecture?
Browser -> froncontroller- > view or Servlet ->Model

Can you show an example controller method in Spring MVC?
@RequestMapping(value= "/lits", method= ReuqestMethod.GET)



Can you explain a simple flow in Spring MVC?


What is a ViewResolver?
What is Model?
What is ModelAndView?
What is a RequestMapping?
What is Dispatcher Servlet?


How do you set up Dispatcher Servlet?
What is a form backing object?
How is validation done using Spring MVC?
What is BindingResult?
How do you map validation results to your view?
What are Spring Form Tags?


What is a Path Variable?
URI http:localhost:8080/todos/1

@Requestmapping(value= "/todos/{id}")
public ToDo retrieveTodos(@PathVariable int id)

What is a Model Attribute?
@ModelAttribute
indicated purpose of that method is to add one or more model attribute. Its invoked before @RequestMapping methods and makes sure that mdoel is populated
Used to fill the model with commonly needed atrributes like drop down. 


What is a Session Attribute?
List the names of model attributes which should be tranparently stored in the seession or some conversationnal storage
@SessionAttributes("name")


What is comtroller advice ?
@ControllerAdvice - implement logic which is common to multiple controllers
@ExceptionHandler  - 
What is a init binder?


 
How do you set default date format with Spring?
Why is Spring MVC so popular?
Spring Boot
What is Spring Boot?
What are the important Goals of Spring Boot?
What are the important Features of Spring Boot?
Compare Spring Boot vs Spring?
Compare Spring Boot vs Spring MVC?
What is the importance of @SpringBootApplication?
What is Auto Configuration?
How can we find more information about Auto Configuration?
What is an embedded server? Why is it important?
What is the default embedded server with Spring Boot?
What are the other embedded servers supported by Spring Boot?
What are Starter Projects?
Can you give examples of important starter projects?
What is Starter Parent?
What are the different things that are defined in Starter Parent?
How does Spring Boot enforce common dependency management for all its Starter projects?
What is Spring Initializr?
What is application.properties?
What are some of the important things that can customized in application.properties?
How do you externalize configuration using Spring Boot?
How can you add custom application properties using Spring Boot?
What is @ConfigurationProperties?
What is a profile?
How do you define beans for a specific profile?
How do you create application configuration for a specific profile?
How do you have different configuration for different environments?
What is Spring Boot Actuator?
How do you monitor web services using Spring Boot Actuator?
How do you find more information about your application envrionment using Spring Boot?
What is a CommandLineRunner?
Database Connectivity - JDBC, Spring JDBC & JPA
What is Spring JDBC? How is different from JDBC?
What is a JdbcTemplate?
What is a RowMapper?
What is JPA?
What is Hibernate?
How do you define an entity in JPA?
What is an Entity Manager?
What is a Persistence Context?
How do you map relationships in JPA?
What are the different types of relationships in JPA?
How do you define One to One Mapping in JPA?
How do you define One to Many Mapping in JPA?
How do you define Many to Many Mapping in JPA?
How do you define a datasource in a Spring Context?
What is the use of persistence.xml
How do you configure Entity Manager Factory and Transaction Manager?
How do you define transaction management for Spring – Hibernate integration?
Spring Data
What is Spring Data?
What is the need for Spring Data?
What is Spring Data JPA?
What is a CrudRepository?
What is a PagingAndSortingRepository?
Unit Testing
How does Spring Framework Make Unit Testing Easy?
What is Mockito?
What is your favorite mocking framework?
How do you do mock data with Mockito?
What are the different mocking annotations that you worked with?
What is MockMvc?
What is @WebMvcTest?
What is @MockBean?
How do you write a unit test with MockMVC?
What is JSONAssert?
How do you write an integration test with Spring Boot?
What is @SpringBootTest?
What is @LocalServerPort?
What is TestRestTemplate?
AOP
What are cross cutting concerns?
How do you implement cross cutting concerns in a web application?
If you would want to log every request to a web application, what are the options you can think of?
If you would want to track performance of every request, what options can you think of?
What is an Aspect and Pointcut in AOP?
What are the different types of AOP advices?
What is weaving?
Compare Spring AOP vs AspectJ?
SOAP Web Services
What is a Web Service?
What is SOAP Web Service?
What is SOAP?
Waht is a SOAP Envelope?
What is SOAP Header and SOAP Body?
Can you give an example of SOAP Request and SOAP Response?
What is a SOAP Header? What kind of information is sent in a SOAP Header?
Can you give an example of a SOAP Header with Authentication information?
What is WSDL (Web Service Definition Language)?
What are the different parts of a WSDL?
What is Contract First Approach?
What is an XSD?
Can you give an example of an XSD?
What is JAXB?
How do you configure a JAXB Plugin?
What is an Endpoint?
Can you show an example endpoint written with Spring Web Services?
What is a MessageDispatcherServlet?
How do you configure a MessageDispatcherServlet?
How do you generate a WSDL using Spring Web Services?
How do you implement error handling for SOAP Web Services?
What is a SOAP Fault?
RESTful Web Services
What is REST?
What are the key concepts in designing RESTful API?
What are the Best Practices of RESTful Services?
Can you show the code for an example Get Resource method with Spring REST?
What happens when we return a bean from a Request Mapping Method?
What is GetMapping and what are the related methods available in Spring MVC?
Can you show the code for an example Post Resource method with Spring REST?
What is the appropriate HTTP Response Status for successful execution of a Resource Creation?
Why do we use ResponseEntity in a RESTful Service?
What is HATEOAS?
Can you give an Example Response for HATEOAS?
How do we implement it using Spring?
How do you document RESTful web services?
Can you give a brief idea about Swagger Documentation?
How do you automate generation of Swagger Documentation from RESTful Web Services?
How do you add custom information to Swagger Documentation generated from RESTful Web Services?
What is Swagger-UI?
What is "Representation" of a Resource?
What is Content Negotiation?
Which HTTP Header is used for Content Negotiation?
How do we implement it using Spring Boot?
How do you add XML support to your RESTful Services built with Spring Boot?
How do you implement Exception Handling for RESTFul Web Services?
What are the best practices related to Exception Handling with respect to RESTful Web Services?
What are the different error status that you would return in RESTful Web Services?
How would you implement them using Spring Boot?
What HTTP Response Status do you return for validation errors?
How do you handle Validation Errors with RESTful Web Services?
Why do we need Versioning for RESTful Web Services?
What are the versioning options that are available?
How do you implement Versioning for RESTful Web Services?
